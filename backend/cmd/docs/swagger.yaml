definitions:
  domain.CreateGenreRequest:
    properties:
      description:
        type: string
      id:
        type: integer
    type: object
  domain.CreatePlatformRequest:
    properties:
      description:
        type: string
      id:
        type: integer
    type: object
  domain.Game:
    properties:
      created_at:
        type: string
      description:
        type: string
      downloads:
        type: integer
      file_id:
        type: string
      genre_id:
        type: integer
      id:
        type: integer
      image_id:
        type: string
      likes:
        type: integer
      team_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
      views:
        type: integer
    type: object
  domain.Genre:
    properties:
      description:
        type: string
      id:
        type: integer
    type: object
  domain.Platform:
    properties:
      description:
        type: string
      id:
        type: integer
    type: object
  domain.SignInRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  domain.SignInResponse:
    properties:
      accessToken:
        type: string
      csrfToken:
        type: string
      refreshToken:
        type: string
    type: object
  domain.SignUpRequest:
    properties:
      date_of_birth:
        type: string
      email:
        type: string
      gender:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  domain.SignUpResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  domain.UpdateGameRequest:
    properties:
      description:
        type: string
      file_id:
        type: string
      genre_id:
        type: integer
      id:
        type: integer
      image_id:
        type: string
      team_id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.UpdateGenreRequest:
    properties:
      description:
        type: string
      id:
        type: integer
    type: object
  domain.UpdatePlatformRequest:
    properties:
      description:
        type: string
      id:
        type: integer
    type: object
  domain.User:
    properties:
      created_at:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: integer
      role:
        $ref: '#/definitions/domain.UserRole'
      updated_at:
        type: string
      username:
        type: string
    type: object
  domain.UserRole:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - _
    - UserRoleGlobalAdmin
    - UserRoleAdmin
    - UserRoleModerator
    - UserRoleUser
info:
  contact: {}
paths:
  /api/v1/auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in with provided credentials
      parameters:
      - description: Sign in request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SignInResponse'
      summary: Sign in
      tags:
      - auth
  /api/v1/auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: Sign up request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SignUpResponse'
      summary: Sign up
      tags:
      - auth
  /api/v1/games:
    post:
      consumes:
      - application/json
      description: Create a new game with provided details
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      - description: Team ID
        in: query
        name: team_id
        required: true
        type: integer
      - description: Description
        in: query
        name: description
        required: true
        type: string
      - description: Genre ID
        in: query
        name: genre_id
        required: true
        type: integer
      - description: Game Image
        in: formData
        name: image
        required: true
        type: file
      - description: Game File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created game
          schema:
            $ref: '#/definitions/domain.Game'
      summary: Create a new game
      tags:
      - games
  /api/v1/games/{game_id}:
    delete:
      consumes:
      - application/json
      description: Delete a game by its ID
      parameters:
      - description: Game ID
        in: path
        name: game_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted game
      summary: Delete a game by ID
      tags:
      - games
    get:
      consumes:
      - application/json
      description: Retrieve a game by its ID
      parameters:
      - description: Game ID
        in: path
        name: game_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved game
          schema:
            $ref: '#/definitions/domain.Game'
      summary: Get a game by ID
      tags:
      - games
    put:
      consumes:
      - application/json
      description: Update details of a game by its ID
      parameters:
      - description: Game ID
        in: path
        name: game_id
        required: true
        type: integer
      - description: Update game request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateGameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated game
          schema:
            $ref: '#/definitions/domain.Game'
      summary: Update a game by ID
      tags:
      - games
  /api/v1/genres:
    post:
      consumes:
      - application/json
      description: Create a new genre with provided details
      parameters:
      - description: Create genre request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.CreateGenreRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created genre
          schema:
            $ref: '#/definitions/domain.Genre'
      summary: Create a new genre (NOT IN PRODUCTION)
      tags:
      - genres
  /api/v1/genres/{genre_id}:
    delete:
      consumes:
      - application/json
      description: Delete a genre by its ID
      parameters:
      - description: Genre ID
        in: path
        name: genre_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted genre
      summary: Delete a genre by ID (NOT IN PRODUCTION)
      tags:
      - genres
    get:
      consumes:
      - application/json
      description: Retrieve a genre by its ID
      parameters:
      - description: Genre ID
        in: path
        name: genre_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved genre
          schema:
            $ref: '#/definitions/domain.Genre'
      summary: Get a genre by ID (NOT IN PRODUCTION)
      tags:
      - genres
    put:
      consumes:
      - application/json
      description: Update details of a genre by its ID
      parameters:
      - description: Genre ID
        in: path
        name: genre_id
        required: true
        type: integer
      - description: Update genre request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateGenreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated genre
          schema:
            $ref: '#/definitions/domain.Genre'
      summary: Update a genre by ID (NOT IN PRODUCTION)
      tags:
      - genres
  /api/v1/platforms:
    post:
      consumes:
      - application/json
      description: Create a new platform with provided details
      parameters:
      - description: Create platform request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.CreatePlatformRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created platform
          schema:
            $ref: '#/definitions/domain.Platform'
      summary: Create a new platform (NOT IN PRODUCTION)
      tags:
      - platforms
  /api/v1/platforms/{platform_id}:
    delete:
      consumes:
      - application/json
      description: Delete a platform by its ID
      parameters:
      - description: Platform ID
        in: path
        name: platform_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted platform
      summary: Delete a platform by ID (NOT IN PRODUCTION)
      tags:
      - platforms
    get:
      consumes:
      - application/json
      description: Retrieve a platform by its ID
      parameters:
      - description: Platform ID
        in: path
        name: platform_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved platform
          schema:
            $ref: '#/definitions/domain.Platform'
      summary: Get a platform by ID (NOT IN PRODUCTION)
      tags:
      - platforms
    put:
      consumes:
      - application/json
      description: Update details of a platform by its ID
      parameters:
      - description: Platform ID
        in: path
        name: platform_id
        required: true
        type: integer
      - description: Update platform request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.UpdatePlatformRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated platform
          schema:
            $ref: '#/definitions/domain.Platform'
      summary: Update a platform by ID (NOT IN PRODUCTION)
      tags:
      - platforms
  /api/v1/users/{user_id}:
    get:
      consumes:
      - application/json
      description: Retrieve a user by its ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            $ref: '#/definitions/domain.User'
      summary: Get a user by ID
      tags:
      - users
swagger: "2.0"
