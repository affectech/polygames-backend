{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/auth/sign-in": {
            "post": {
                "description": "Sign in with provided credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "parameters": [
                    {
                        "description": "Sign in request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.SignInResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/sign-up": {
            "post": {
                "description": "Create a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up",
                "parameters": [
                    {
                        "description": "Sign up request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.SignUpResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/games": {
            "post": {
                "description": "Create a new game with provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Create a new game",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "team_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Genre ID",
                        "name": "genre_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Game Image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Game File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created game",
                        "schema": {
                            "$ref": "#/definitions/domain.Game"
                        }
                    }
                }
            }
        },
        "/api/v1/games/{game_id}": {
            "get": {
                "description": "Retrieve a game by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Get a game by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "game_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved game",
                        "schema": {
                            "$ref": "#/definitions/domain.Game"
                        }
                    }
                }
            },
            "put": {
                "description": "Update details of a game by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Update a game by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "game_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update game request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateGameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated game",
                        "schema": {
                            "$ref": "#/definitions/domain.Game"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a game by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Delete a game by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "game_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted game"
                    }
                }
            }
        },
        "/api/v1/genres": {
            "post": {
                "description": "Create a new genre with provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Create a new genre (NOT IN PRODUCTION)",
                "parameters": [
                    {
                        "description": "Create genre request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateGenreRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created genre",
                        "schema": {
                            "$ref": "#/definitions/domain.Genre"
                        }
                    }
                }
            }
        },
        "/api/v1/genres/{genre_id}": {
            "get": {
                "description": "Retrieve a genre by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Get a genre by ID (NOT IN PRODUCTION)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genre ID",
                        "name": "genre_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved genre",
                        "schema": {
                            "$ref": "#/definitions/domain.Genre"
                        }
                    }
                }
            },
            "put": {
                "description": "Update details of a genre by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Update a genre by ID (NOT IN PRODUCTION)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genre ID",
                        "name": "genre_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update genre request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateGenreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated genre",
                        "schema": {
                            "$ref": "#/definitions/domain.Genre"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a genre by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Delete a genre by ID (NOT IN PRODUCTION)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genre ID",
                        "name": "genre_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted genre"
                    }
                }
            }
        },
        "/api/v1/platforms": {
            "post": {
                "description": "Create a new platform with provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "platforms"
                ],
                "summary": "Create a new platform (NOT IN PRODUCTION)",
                "parameters": [
                    {
                        "description": "Create platform request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreatePlatformRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created platform",
                        "schema": {
                            "$ref": "#/definitions/domain.Platform"
                        }
                    }
                }
            }
        },
        "/api/v1/platforms/{platform_id}": {
            "get": {
                "description": "Retrieve a platform by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "platforms"
                ],
                "summary": "Get a platform by ID (NOT IN PRODUCTION)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Platform ID",
                        "name": "platform_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved platform",
                        "schema": {
                            "$ref": "#/definitions/domain.Platform"
                        }
                    }
                }
            },
            "put": {
                "description": "Update details of a platform by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "platforms"
                ],
                "summary": "Update a platform by ID (NOT IN PRODUCTION)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Platform ID",
                        "name": "platform_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update platform request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdatePlatformRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated platform",
                        "schema": {
                            "$ref": "#/definitions/domain.Platform"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a platform by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "platforms"
                ],
                "summary": "Delete a platform by ID (NOT IN PRODUCTION)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Platform ID",
                        "name": "platform_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted platform"
                    }
                }
            }
        },
        "/api/v1/users/{user_id}": {
            "get": {
                "description": "Retrieve a user by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.CreateGenreRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "domain.CreatePlatformRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "domain.Game": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "downloads": {
                    "type": "integer"
                },
                "file_id": {
                    "type": "string"
                },
                "genre_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image_id": {
                    "type": "string"
                },
                "likes": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "domain.Genre": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "domain.Platform": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "domain.SignInRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "domain.SignInResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "domain.SignUpRequest": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "domain.SignUpResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "domain.UpdateGameRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "file_id": {
                    "type": "string"
                },
                "genre_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image_id": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "domain.UpdateGenreRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "domain.UpdatePlatformRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "$ref": "#/definitions/domain.UserRole"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "domain.UserRole": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "_",
                "UserRoleGlobalAdmin",
                "UserRoleAdmin",
                "UserRoleModerator",
                "UserRoleUser"
            ]
        }
    }
}